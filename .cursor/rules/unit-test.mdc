---
description: 
globs: *.test.ts,*.test.tsx
alwaysApply: false
---
# Vitest Testing Guidelines
description: Specific rules for writing tests with Vitest
globs: **/*.test.ts,**/*.test.tsx

These rules apply to all test files in the project.

## Test structure and naming:
- Test files for `x.ts` or `x.tsx` should be named `x.test.ts` or `x.test.tsx`
- Use descriptive test names that explain what is being tested
- Group related tests using `describe` blocks
- Use `it` for individual test cases with clear descriptions

## Testing practices:
- Import from vitest: `import { describe, it, expect, vi } from 'vitest'`
- When mocking, use `vi.mock()` or `vi.fn()`
- Test both the happy path and edge cases
- For UI components, test user interactions and rendering
- Keep tests independent of each other
- Prefer testing public API over implementation details

## Example test structure:
```typescript
import { describe, it, expect } from 'vitest'
import { yourFunction } from './yourFile'

describe('yourFunction', () => {
  it('should handle normal input correctly', () => {
    // Arrange
    const input = {...}
    // Act
    const result = yourFunction(input)
    // Assert
    expect(result).toBe(expectedResult)
  })

  it('should handle edge cases', () => {
    // Tests for edge cases
  })
})
```